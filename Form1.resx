<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACqEQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAEXFJ
        REFUeNrt3WmwnFWdx/HvOU9vt++SBQIaUDSCAiYxGTaBARmigxsqNYAKKDA4yKg1U/Nq3lilxRvLF9Zo
        qVWglDiWRTEOAipaZpAKO5HELLIqSgKIxJDc5N7u2/tz/vOi+3ZySW7SfZekl9+HIlt33376LP/nf85z
        ntMgIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiHcL14of6UeEO1WyXiyIjBMdnBq5SYSgAHN5/T/x4yt/NDO8TabARYBhI9dLn7UEBKALjOJe3ENcm
        H7hl69+46T3Hc+3gNSolBYB9bh39Cal0qflBKlRJk17qcGfjOB9YAZwIjADpxtNM1d6RbTAGSsAo8CKw
        CeNRw7YGwrgDskRMEHP94GdVav0eAH4w8UOwen/+1OC1/KTw45XA1cClDk4Gkqrerpcz2AzcCdwTLN4x
        +UDNGTcOXq8S6scAcFv+B7jGoTvcUnBfcI7rwJ1Qf4ZO8r3VRM2ATWZ808FdgdBM+25QEOivAPD93G2A
        wywQ+cRFwNfAvVdV2RfKYHcAXw0WXvYuSWwVbhz+nEqmHwLArbnv4XD4OOksiq9xjq+De7Oqsd/YY2Z8
        yVzY4uIk5qrcOPIvKpZeDgC3jN+Cc57vXf89Pn/7528AvgFugdL9fm22thW43rDNscV4HDeN3KSi6cUA
        8N38d0mGFMHFYO4y57gN3GJVX7+z9WZcBbYtYHxh5F9VJD0ZAMa+g3MRDpYDdwOnqOp6trrbDQJ3ADca
        TJgFvrjgi6rmNiQ6/QC/Pf4tMIdZGDDHlx1OnX/mnaUXP9GVYA8Dt0ad35wVANoV1wIuCgCXYu4TpjG/
        HNiG/91cWHt87rjtW7Zs6ZoDX7Vq1VE/ho7OCb81/k1ccAAjOO4Bd7HauxxMFPzNF7+45tvlqOw79BAd
        UEkkEnur1aplMhlKpRKrV68+qgfV0RlAXKsR+QjgfMydqxl/ORjDSMep/xhPjV+ZrqU7+bRWrFar64Hv
        FIvFZ1evXs3GjRs588wzFQAOxjlHsVwmnU59DGxATV2mU4qKw+OpsVOPrS7BrKNPFKuB88zsmk2bNj19
        tI+1owNAIJBMRUvMwnlq4nIoNWeMpkdZnDuGLpgneg/wb2Z2k3MuKABMo1GRyww7SU1cDtlWzBhPjVGl
        SmRRe50gkSCRSLT1XpVKZbaZxnnAMWb2ugLAtAUdAN5B/X5+kenbCkYxUaTsy2SqmZZf570nk8ngfXtz
        hyEEyuXybA55gPoeFUdVxw8BqN/P36kzu9JBqq5CxZVJh3TLwwDnHM61P2vovSeE0G1F1GUBoJ4BLFTT
        llbErkaVKiGElgNAu2f+SWamADDfrJ4BaGMPaUkAYmIsGOYOHwDMbMbj+Nm8VgGg1Qq17o+wcgRZfWwe
        QmgpAED9+WbW9jBAGcARqU8FAGldmOyYFlo+O8/mLK4AMN8VqgxA2uD3zwBoPQOYCWUARyIAKANoq0EC
        OEcjpfX9twWy1U8amgPokQBgygBabPfG8dGbWJ5eSdYPsr36Is9XnqNqlebmqX3S/zFrfw6gXc45ZQBH
        gjKA/Rp3IxhOntn3lZGxNHECVwx/miXRcQCszpzBw4V1PFh4oL/KcAaTgJoD6IJG39cdH8PhWZo4kXem
        TmVRtJgI30ztDeO4xPEsiY5rjnsTJDgjcxZbS5vYFb/eN1lAAIIZwazltjObIYACwLxXaH8HAMNIkeL8
        7Ps4b+AChvzQIZ+7/5/TLkPaZYgtxrv+WEjpDSyE+v8tzgFMXgacaQCYySpCBYCWC7l/A4BhJF2Sfxh8
        PxdmL6YQCjxUeIC/1l6d0mADgWWpd3DuwAU4XCNjcLwe72Q03lX/SX1SjvUMoL0hQKVSIZ/PMzQ01PL7
        xHFMPp/viYlAZQAdyuO5MHtxs/Pfk/sfnipvbXRmNyVQ/KnyBxIkWZFZRYIEu+KdrM3fx3gYawaFviiz
        xlWAdtYBhBDYuXMno6OjLZ/N4zimVqv1RJlpHcAcm7z0ZgQcnogIw4ipAQ6Pm7Y7Tr7W4zgvewEXZd9P
        MRT5We4ufl/a3HiGe0OgcEyEPPfm/pf1xUfJuAw7a39jLOyFPur8UC88C4EQDFzrn7tWq7Xdobs99e+K
        ANCNKwEDRkTEyal3sTy9ikXRImrUeKmyja2lTewJo9NOyhngcJybvZBLhj5KTMwvcj9lU+nJxmvsoK8B
        qFiZ7ZUXm43TzWAVwOTwoYv7f2MdQH0I8MYsYC477XQZxny+Z98FgG7MABIuwZrBS3jf4Boybt8uZivT
        q1mVOYO7x+9ke3XbNB3NOGvgXD44dCkAv8r9jA3F9Vjjv3YaZ7tn/qRLknYZcmG8+bWr3RgBQrDmHEA6
        nSadTjcfLhaLVKvVeXt77z1DQ0PNTl+r1SgUCgoAM6/P7goAwYxzBs5jzeAHSbjEAZ3wLcmT+PjIFdy+
        5xb2xnv3nR0aZ40zBs7hY8P/RITnvty9PFJY1yiD+e2MZoFjomO5fOTTbCn9js2ljRRDoeuuHrxxEnBg
        YAAzo1wuk81mSaVSs93E45CSySSZTIZcLkcURWSzWSYmJjp6olAZwBzK+iznZM8/aOeHeop9UvLtrMis
        5reFx/CNfU6SPsnyzHv46PBlZP0gD07cz4bi46RIciTOxOaMtEtzQvItnJx+Fyszq1k3cT8vlJ8nJu6a
        YcH+9wIE6r8XCgWKxWIz2MZxPC9p+eRlwXK5TC6XI5FIkEqlZnyZUQGA7soAggUW+kXN1XjTcTj+cejD
        nDWw7xvNMy7DMdESEi5BTMy70qezLHVkvwAp6ZJk/AAez2np5bwttYwtxU2sm1jLa7W/dkUIMByDg4Ms
        tIUEAul0unm5LoTA0NAQ3vt5CwDJZLLZ4c2MRCLBggULOrrMlAHM1bE2Zv0PlzYbxqAfJO3S+/0bVKlS
        tQoAi6Njmx3O4Ui5dPMSQdUqxIQ575CufvTNvw+4LCckT2TEL+BVe6VLsgBHpVKmWCxizigWi5TLZcyM
        iYmJeb90VyqVqFarmBm1Wo1du3bNeMchBQC6bB2AGXvi3YzFexlIZA/Z0R7M/4YNxcdxLWx16PGclFrG
        mqFLOCZawp8qf+TXuV9QsbkbyxrGMdESrlp4HYN+iN3xLh6beJAnCo+wN95Tv/mlGy4nGhSKBdL5/JSF
        QM45qtXqvE4ATqlj55rDj06nlYBzaG88yubiBj40/PFpO/9k53ql+jK+xVT0hcof2FH9K59d9DnemT6N
        lyrb+MX4T6kyN3f7BTMKyQK5kGNzcSPrJtbyavWV5jF3y2q3YPtu052yNPoIH383rQ5UBjCXFY/xQP7X
        HJ94M383cPYBj+fCOD8b+wmv1l5pufPXOyE8XdrCnXt/xFWLrucDwx+mZEXW5u4jEM/6uL1z5MMYP9xz
        Cy9XtlGzWnOc3E0LiTzt3w3Y75QBzLG98R5+vOc2tlf+zOqBsxmORogt5i/Vl3go/xueLz/TWHDTbnCB
        3xXX43Bcveif+cjwZdSsxm9yvzzknIDt9+sbw8r+r8nFOcbjscZaxe46i02qZwAKAD0TALr1XoCxeC+/
        HL+HB/P3k/EDBIvJhxwVqzQnCWfaPDcUHyfjM3xy4Wf52MjllK3Iuvz/Tfvz0i5D1g++oetDMRQpWuEg
        ASN07eJhz+Q6AMPa/MatdgJerywD7vgA0O13seVDbsrKOjcHn8mAh/MP4PFcufAzXDbyacqhzKMTBy4a
        ChZzxuA5XL7g6qkdxXnuz/2KtbmfT5n572bW+CWE+t2PrQ5dzOoLhoaHh1vu2JVKhbGxMW0JNt965W7A
        yTTc5vDnrcuvJelSXL7gaj618FqGoxF+X/wdVds30x0TOC7xJpYkjp/6AxwM+sH6ZdYe2itkJluCJZNJ
        TjnlFBYuXNjy+8RxzAsvvMCOHTu0H8C8BgDtCHRI9+fuw+P5yMhlXLHgGj48/AlqVtuvQxgplzog9Dhz
        9VSZ0Fu7hs5gS7BkMtnWXgBQ/zLR4eFhXnvtNe0HML/1qQBwKJVQ4Zfjd/On8vP8/eDFvDX1tvqiof17
        hB9kgOxByraRKvdSBmD75gDwre8KrB2BOpQygMOLLfB0aQvPl55mwGdJuMR+j8VcMLSGqxfdMPVFrp75
        91wG0Ggz1tgavNVOPLNgowAw75QBtMYBMTVyYbx5ZyHU5wB2Vl/j5cq2Kc/3zrMnHq2f/VzvlHEwh+13
        O3ArnXg2Kby2BJv3ClUAmA2PY3NxA8+WnjrgsfpS4voOur30ecMR+F6Ayc6vXYHnmTKA2StbiXIoHfSx
        Hrqc3bgM6BqTgO3NAcwmAGgIMI+UAcxzp+mx8b/h6uP/IzAHACgAzHsAUAYgbUWA9oYAc/HdgJoDmM/6
        tPnfDkt6pvcTcFP2BJzPTqw5gCOgvlLNVTv5GKVzAoA3h8XW1hyALgN2cgAg4MztndwwW2T67m/4OMJX
        fVtzADM5+092egWAea/UgOH+AhbgcHetKED0ewjwlQhfSrR1GbBQKDA2NsaSJUtafqdKpcLu3bvnIgAc
        9Ubb4XMABtifDfLAyOEagPQxZyQLKaJioq2vBisWi2zYsIHFixe3vH9fsVhk165ds50ELLsOGN52w1WA
        F4HtwEq1cjkoA3OBgdFhXMUT2lzdOD4+ztjYWFuvmYPNPrcAu4/2VYSOvwqQ8pnXy6H0uAKAHCoC+Jpn
        eMciLNgR2Q1ollcAtgPfBmpRFCkATM9RCgWAnwPXAgNq7HJg9zcyuWwp+/qC8XbS/6OgBGx2zn3DOfdE
        J1xK7OwA4GqTs7mPGTwBXKzmLgcLAZVU5b8yY4O3x8la1KkbmTrnSma2o/E7AF/5yleO7jF1etVe8ocz
        ieu73FyJ8SMgrQYvb2jFz5kPH3r7xhUvLX3u5I5v1WaGc46bb765A4quw33guVWTk4EDht0OfFItXvZT
        A76E41aLA+ve/YxKpJcCAMCa51Y2goAtN7gbOKUbjluOSAO+A9yNwITH88Bpv1ehtKHDJwHrYucIcRXv
        o6fN7D+B24DFqr6+t95wX3bYhHfq/DPRNcvnLnr2dIzA7nufY/EnTr3B4BtAZ3/1qsynrQ6uB7fZE2EY
        D53+rEqlVwMAwIXPnoph1OLYRd5dA3wdeLOqse88Bu6L3rmtsQUSLuKh059XqfR6AAC44Jl3Nra5dhjx
        RQZfw3ivSrwvlIE7HO6rDvcy3uECPPLuP6pk+qk5nv/MyY0/GcFsKdgXgOsMTlAf6y2N+0AN2AR8E7jL
        O9/Y48zz2LtfUCH1WwAAOPeZZc37f56ovch7E29badjVwKXAyUBS1dv1csBm4E6Hu8fhd0w22jiK+e1p
        L6mE+jUAAJyxcRnJzL6llJFPUo3LS4Gzwc4HVgAnUr+TMN34vLptsDPbYEx9qewo9RvANoF7FNjqnR8H
        qFmJhBtg/fJtKjUFgKnOeeqtMKV3OyBOgxsBhoFUL33eHhSAIjBuWN7hm99x9uQPd3HOdcfy2xUvq5QU
        AA7vrKfe0rsfrl/4ekh4csUrKgsRERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERHpB/8PdbtYYgslS1IAAAAASUVORK5CYII=
</value>
  </data>
</root>